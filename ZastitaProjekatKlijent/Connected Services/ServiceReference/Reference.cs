//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ZastitaProjekatKlijent.ServiceReference {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference.IServiceZI")]
    public interface IServiceZI {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceZI/Crc32", ReplyAction="http://tempuri.org/IServiceZI/Crc32Response")]
        uint Crc32(byte[] podaci);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceZI/Crc32", ReplyAction="http://tempuri.org/IServiceZI/Crc32Response")]
        System.Threading.Tasks.Task<uint> Crc32Async(byte[] podaci);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceZI/EnkriptujRC4", ReplyAction="http://tempuri.org/IServiceZI/EnkriptujRC4Response")]
        byte[] EnkriptujRC4(byte[] podaci, byte[] kljuc);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceZI/EnkriptujRC4", ReplyAction="http://tempuri.org/IServiceZI/EnkriptujRC4Response")]
        System.Threading.Tasks.Task<byte[]> EnkriptujRC4Async(byte[] podaci, byte[] kljuc);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceZI/DekriptujRC4", ReplyAction="http://tempuri.org/IServiceZI/DekriptujRC4Response")]
        byte[] DekriptujRC4(byte[] podaci, byte[] kljuc);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceZI/DekriptujRC4", ReplyAction="http://tempuri.org/IServiceZI/DekriptujRC4Response")]
        System.Threading.Tasks.Task<byte[]> DekriptujRC4Async(byte[] podaci, byte[] kljuc);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceZI/EnkriptujTEA", ReplyAction="http://tempuri.org/IServiceZI/EnkriptujTEAResponse")]
        byte[] EnkriptujTEA(byte[] podaci, byte[] kljuc);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceZI/EnkriptujTEA", ReplyAction="http://tempuri.org/IServiceZI/EnkriptujTEAResponse")]
        System.Threading.Tasks.Task<byte[]> EnkriptujTEAAsync(byte[] podaci, byte[] kljuc);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceZI/DekriptujTEA", ReplyAction="http://tempuri.org/IServiceZI/DekriptujTEAResponse")]
        byte[] DekriptujTEA(byte[] podaci, byte[] kljuc);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceZI/DekriptujTEA", ReplyAction="http://tempuri.org/IServiceZI/DekriptujTEAResponse")]
        System.Threading.Tasks.Task<byte[]> DekriptujTEAAsync(byte[] podaci, byte[] kljuc);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceZI/EnkriptujTEA_CBC_Mode", ReplyAction="http://tempuri.org/IServiceZI/EnkriptujTEA_CBC_ModeResponse")]
        byte[] EnkriptujTEA_CBC_Mode(byte[] podaci, byte[] kljuc, byte[] IV);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceZI/EnkriptujTEA_CBC_Mode", ReplyAction="http://tempuri.org/IServiceZI/EnkriptujTEA_CBC_ModeResponse")]
        System.Threading.Tasks.Task<byte[]> EnkriptujTEA_CBC_ModeAsync(byte[] podaci, byte[] kljuc, byte[] IV);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceZI/DekriptujTEA_CBC_Mode", ReplyAction="http://tempuri.org/IServiceZI/DekriptujTEA_CBC_ModeResponse")]
        byte[] DekriptujTEA_CBC_Mode(byte[] podaci, byte[] kljuc, byte[] IV);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceZI/DekriptujTEA_CBC_Mode", ReplyAction="http://tempuri.org/IServiceZI/DekriptujTEA_CBC_ModeResponse")]
        System.Threading.Tasks.Task<byte[]> DekriptujTEA_CBC_ModeAsync(byte[] podaci, byte[] kljuc, byte[] IV);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceZI/EnkriptujENIGMA", ReplyAction="http://tempuri.org/IServiceZI/EnkriptujENIGMAResponse")]
        string EnkriptujENIGMA(string podaci, string ringovi, string kljuc, string reflektor, string r1, string r2, string r3, string[] plugboardParovi);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceZI/EnkriptujENIGMA", ReplyAction="http://tempuri.org/IServiceZI/EnkriptujENIGMAResponse")]
        System.Threading.Tasks.Task<string> EnkriptujENIGMAAsync(string podaci, string ringovi, string kljuc, string reflektor, string r1, string r2, string r3, string[] plugboardParovi);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceZI/DekriptujENIGMA", ReplyAction="http://tempuri.org/IServiceZI/DekriptujENIGMAResponse")]
        string DekriptujENIGMA(string podaci, string ringovi, string kljuc, string reflektor, string r1, string r2, string r3, string[] plugboardParovi);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceZI/DekriptujENIGMA", ReplyAction="http://tempuri.org/IServiceZI/DekriptujENIGMAResponse")]
        System.Threading.Tasks.Task<string> DekriptujENIGMAAsync(string podaci, string ringovi, string kljuc, string reflektor, string r1, string r2, string r3, string[] plugboardParovi);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IServiceZIChannel : ZastitaProjekatKlijent.ServiceReference.IServiceZI, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ServiceZIClient : System.ServiceModel.ClientBase<ZastitaProjekatKlijent.ServiceReference.IServiceZI>, ZastitaProjekatKlijent.ServiceReference.IServiceZI {
        
        public ServiceZIClient() {
        }
        
        public ServiceZIClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ServiceZIClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ServiceZIClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ServiceZIClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public uint Crc32(byte[] podaci) {
            return base.Channel.Crc32(podaci);
        }
        
        public System.Threading.Tasks.Task<uint> Crc32Async(byte[] podaci) {
            return base.Channel.Crc32Async(podaci);
        }
        
        public byte[] EnkriptujRC4(byte[] podaci, byte[] kljuc) {
            return base.Channel.EnkriptujRC4(podaci, kljuc);
        }
        
        public System.Threading.Tasks.Task<byte[]> EnkriptujRC4Async(byte[] podaci, byte[] kljuc) {
            return base.Channel.EnkriptujRC4Async(podaci, kljuc);
        }
        
        public byte[] DekriptujRC4(byte[] podaci, byte[] kljuc) {
            return base.Channel.DekriptujRC4(podaci, kljuc);
        }
        
        public System.Threading.Tasks.Task<byte[]> DekriptujRC4Async(byte[] podaci, byte[] kljuc) {
            return base.Channel.DekriptujRC4Async(podaci, kljuc);
        }
        
        public byte[] EnkriptujTEA(byte[] podaci, byte[] kljuc) {
            return base.Channel.EnkriptujTEA(podaci, kljuc);
        }
        
        public System.Threading.Tasks.Task<byte[]> EnkriptujTEAAsync(byte[] podaci, byte[] kljuc) {
            return base.Channel.EnkriptujTEAAsync(podaci, kljuc);
        }
        
        public byte[] DekriptujTEA(byte[] podaci, byte[] kljuc) {
            return base.Channel.DekriptujTEA(podaci, kljuc);
        }
        
        public System.Threading.Tasks.Task<byte[]> DekriptujTEAAsync(byte[] podaci, byte[] kljuc) {
            return base.Channel.DekriptujTEAAsync(podaci, kljuc);
        }
        
        public byte[] EnkriptujTEA_CBC_Mode(byte[] podaci, byte[] kljuc, byte[] IV) {
            return base.Channel.EnkriptujTEA_CBC_Mode(podaci, kljuc, IV);
        }
        
        public System.Threading.Tasks.Task<byte[]> EnkriptujTEA_CBC_ModeAsync(byte[] podaci, byte[] kljuc, byte[] IV) {
            return base.Channel.EnkriptujTEA_CBC_ModeAsync(podaci, kljuc, IV);
        }
        
        public byte[] DekriptujTEA_CBC_Mode(byte[] podaci, byte[] kljuc, byte[] IV) {
            return base.Channel.DekriptujTEA_CBC_Mode(podaci, kljuc, IV);
        }
        
        public System.Threading.Tasks.Task<byte[]> DekriptujTEA_CBC_ModeAsync(byte[] podaci, byte[] kljuc, byte[] IV) {
            return base.Channel.DekriptujTEA_CBC_ModeAsync(podaci, kljuc, IV);
        }
        
        public string EnkriptujENIGMA(string podaci, string ringovi, string kljuc, string reflektor, string r1, string r2, string r3, string[] plugboardParovi) {
            return base.Channel.EnkriptujENIGMA(podaci, ringovi, kljuc, reflektor, r1, r2, r3, plugboardParovi);
        }
        
        public System.Threading.Tasks.Task<string> EnkriptujENIGMAAsync(string podaci, string ringovi, string kljuc, string reflektor, string r1, string r2, string r3, string[] plugboardParovi) {
            return base.Channel.EnkriptujENIGMAAsync(podaci, ringovi, kljuc, reflektor, r1, r2, r3, plugboardParovi);
        }
        
        public string DekriptujENIGMA(string podaci, string ringovi, string kljuc, string reflektor, string r1, string r2, string r3, string[] plugboardParovi) {
            return base.Channel.DekriptujENIGMA(podaci, ringovi, kljuc, reflektor, r1, r2, r3, plugboardParovi);
        }
        
        public System.Threading.Tasks.Task<string> DekriptujENIGMAAsync(string podaci, string ringovi, string kljuc, string reflektor, string r1, string r2, string r3, string[] plugboardParovi) {
            return base.Channel.DekriptujENIGMAAsync(podaci, ringovi, kljuc, reflektor, r1, r2, r3, plugboardParovi);
        }
    }
}
